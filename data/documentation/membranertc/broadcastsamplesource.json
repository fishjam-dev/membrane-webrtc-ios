{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BroadcastSampleSource"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Should be used by implementations of "},{"type":"codeVoice","code":"Broadcast Upload Extension"},{"type":"text","text":" inside "},{"type":"codeVoice","code":"SampleHandler.swift"},{"type":"text","text":" files."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"BroadcastSampleSource"},{"type":"text","text":" works as an "},{"type":"codeVoice","code":"IPC"},{"type":"text","text":" client whose role is to connect with already existing "},{"type":"codeVoice","code":"IPC"},{"type":"text","text":" server. The server"},{"type":"text","text":" "},{"type":"text","text":"must be started by the application initiating the broadcast extension before the client."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Internally the "},{"type":"codeVoice","code":"BroadcastSampleSource"},{"type":"text","text":" serializes received sample buffers into "},{"type":"codeVoice","code":"Proto Buffers"},{"type":"text","text":" and send them using the "},{"type":"codeVoice","code":"IPC"},{"type":"text","text":" mechanism."},{"type":"text","text":" "},{"type":"text","text":"The application class able to receive and interpret all sample and notification messages is "},{"type":"codeVoice","code":"ScreenBroadcastCapturer"},{"type":"text","text":" that is further used by the "},{"type":"codeVoice","code":"LocalScreenBroadcastTrack"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case when source failed to connect all frame processing and notification sending will be ignored."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To make the "},{"type":"codeVoice","code":"IPC"},{"type":"text","text":" communication work both "},{"type":"codeVoice","code":"BroadcastSampleSource"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ScreenBroadcastCapturer"},{"type":"text","text":" must share the same "},{"type":"codeVoice","code":"App Group"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/membranertc\/broadcastsamplesource"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A class working as a source of screen broadcast samples."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BroadcastSampleSource"}],"title":"BroadcastSampleSource","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:11MembraneRTC21BroadcastSampleSourceC","modules":[{"name":"MembraneRTC"}],"navigatorTitle":[{"kind":"identifier","text":"BroadcastSampleSource"}]},"hierarchy":{"paths":[["doc:\/\/MembraneRTC\/documentation\/MembraneRTC"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/init(appGroup:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/connect()","doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/finished()","doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/paused()","doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/processFrame(sampleBuffer:ofType:)","doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/resumed()","doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/started()"]}],"references":{"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/connect()":{"role":"symbol","title":"connect()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/connect()","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/connect()"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/started()":{"role":"symbol","title":"started()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"started"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Sends "},{"type":"codeVoice","code":"started"},{"type":"text","text":" notification."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/started()","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/started()"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/resumed()":{"role":"symbol","title":"resumed()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resumed"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Sends "},{"type":"codeVoice","code":"resumed"},{"type":"text","text":" notification."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/resumed()","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/resumed()"},"doc://MembraneRTC/documentation/MembraneRTC":{"role":"collection","title":"MembraneRTC","abstract":[{"type":"text","text":"MembraneRTC client."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC","kind":"symbol","type":"topic","url":"\/documentation\/membranertc"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/init(appGroup:)":{"role":"symbol","title":"init(appGroup:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"appGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/init(appGroup:)","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/init(appgroup:)"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource":{"role":"symbol","title":"BroadcastSampleSource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BroadcastSampleSource"}],"abstract":[{"type":"text","text":"A class working as a source of screen broadcast samples."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BroadcastSampleSource"}],"url":"\/documentation\/membranertc\/broadcastsamplesource"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/paused()":{"role":"symbol","title":"paused()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"paused"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Sends "},{"type":"codeVoice","code":"paused"},{"type":"text","text":" notification."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/paused()","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/paused()"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/finished()":{"role":"symbol","title":"finished()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finished"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Sends "},{"type":"codeVoice","code":"finished"},{"type":"text","text":" notification."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/finished()","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/finished()"},"doc://MembraneRTC/documentation/MembraneRTC/BroadcastSampleSource/processFrame(sampleBuffer:ofType:)":{"role":"symbol","title":"processFrame(sampleBuffer:ofType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"processFrame"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sampleBuffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CMSampleBuffer","preciseIdentifier":"c:@T@CMSampleBufferRef"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RPSampleBufferType","preciseIdentifier":"c:@E@RPSampleBufferType"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Processes provided sample buffer by serializing it and passing via "},{"type":"codeVoice","code":"IPC"},{"type":"text","text":" mechanism."}],"identifier":"doc:\/\/MembraneRTC\/documentation\/MembraneRTC\/BroadcastSampleSource\/processFrame(sampleBuffer:ofType:)","kind":"symbol","type":"topic","url":"\/documentation\/membranertc\/broadcastsamplesource\/processframe(samplebuffer:oftype:)"}}}