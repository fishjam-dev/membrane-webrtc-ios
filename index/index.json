{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/audiotrack\/==(_:_:)","title":"static func == (AudioTrack, AudioTrack) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/audiotrack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/audiotrack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/audiotrack","title":"AudioTrack","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/init(appgroup:)","title":"init(appGroup: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/connect()","title":"func connect() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/finished()","title":"func finished()","type":"method"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/paused()","title":"func paused()","type":"method"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/processframe(samplebuffer:oftype:)","title":"func processFrame(sampleBuffer: CMSampleBuffer, ofType: RPSampleBufferType)","type":"method"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/resumed()","title":"func resumed()","type":"method"},{"path":"\/documentation\/membranertc\/broadcastsamplesource\/started()","title":"func started()","type":"method"}],"path":"\/documentation\/membranertc\/broadcastsamplesource","title":"BroadcastSampleSource","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipc\/connected","title":"var connected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipc\/close()","title":"func close()","type":"method"}],"path":"\/documentation\/membranertc\/ipc","title":"IPC","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipcclient\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipcclient\/connect(with:)","title":"func connect(with: String) -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/ipcclient\/send(_:messageid:)","title":"func send(Data, messageId: Int32) -> Bool","type":"method"}],"path":"\/documentation\/membranertc\/ipcclient","title":"IPCCLient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipcserver\/init(onreceive:loop:)","title":"init(onReceive: IPCOnReceiveData?, loop: CFRunLoop)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipcserver\/onreceive","title":"var onReceive: IPCOnReceiveData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/ipcserver\/listen(for:)","title":"func listen(for: String) -> Bool","type":"method"}],"path":"\/documentation\/membranertc\/ipcserver","title":"IPCServer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localaudiotrack\/track","title":"let track: RTCAudioTrack","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localaudiotrack\/enabled()","title":"func enabled() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/setenabled(_:)","title":"func setEnabled(Bool)","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/setvideochatmode()","title":"func setVideoChatMode()","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/setvoicechatmode()","title":"func setVoiceChatMode()","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/membranertc\/localaudiotrack\/trackid()","title":"func trackId() -> String","type":"method"}],"path":"\/documentation\/membranertc\/localaudiotrack","title":"LocalAudioTrack","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localcameravideotrack\/switchcamera()","title":"func switchCamera()","type":"method"},{"path":"\/documentation\/membranertc\/localcameravideotrack\/switchcamera(deviceid:)","title":"func switchCamera(deviceId: String)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localcameravideotrack\/getcapturedevices()","title":"static func getCaptureDevices() -> [AVCaptureDevice]","type":"method"}],"path":"\/documentation\/membranertc\/localcameravideotrack","title":"LocalCameraVideoTrack","type":"class"},{"path":"\/documentation\/membranertc\/localfilevideotrack","title":"LocalFileVideoTrack","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrack\/delegate","title":"var delegate: LocalScreenBroadcastTrackDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrack\/paused()","title":"func paused()","type":"method"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrack\/resumed()","title":"func resumed()","type":"method"}],"path":"\/documentation\/membranertc\/localscreenbroadcasttrack","title":"LocalScreenBroadcastTrack","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localvideotrack\/trackid","title":"var trackID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localvideotrack\/enabled()","title":"func enabled() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/localvideotrack\/setenabled(_:)","title":"func setEnabled(Bool)","type":"method"},{"path":"\/documentation\/membranertc\/localvideotrack\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/membranertc\/localvideotrack\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/membranertc\/localvideotrack\/trackid()","title":"func trackId() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localvideotrack\/create(videoparameters:)","title":"static func create(videoParameters: VideoParameters) -> LocalVideoTrack","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localvideotrack\/capturer\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/membranertc\/localvideotrack\/capturer\/file","title":"case file","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localvideotrack\/capturer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/localvideotrack\/capturer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/localvideotrack\/capturer","title":"LocalVideoTrack.Capturer","type":"enum"}],"path":"\/documentation\/membranertc\/localvideotrack","title":"LocalVideoTrack","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/membranertc\/createoptions\/init(encoder:)","title":"init(encoder: Encoder)","type":"init"}],"path":"\/documentation\/membranertc\/membranertc\/createoptions","title":"MembraneRTC.CreateOptions","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/membranertc\/changewebrtcloggingseverity(severity:)","title":"func changeWebRTCLoggingSeverity(severity: RTCLoggingSeverity)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/connect(metadata:)","title":"func connect(metadata: Metadata)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/createaudiotrack(metadata:)","title":"func createAudioTrack(metadata: Metadata) -> LocalAudioTrack","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/createscreencasttrack(appgroup:videoparameters:metadata:onstart:onstop:)","title":"func createScreencastTrack(appGroup: String, videoParameters: VideoParameters, metadata: Metadata, onStart: (_ track: LocalScreenBroadcastTrack) -> Void, onStop: () -> Void) -> LocalScreenBroadcastTrack","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/createvideotrack(videoparameters:metadata:capturedeviceid:)","title":"func createVideoTrack(videoParameters: VideoParameters, metadata: Metadata, captureDeviceId: String?) -> LocalVideoTrack","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/currentendpoint()","title":"func currentEndpoint() -> Endpoint","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/disabletrackencoding(trackid:encoding:)","title":"func disableTrackEncoding(trackId: String, encoding: TrackEncoding)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/disconnect()","title":"func disconnect()","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/enabletrackencoding(trackid:encoding:)","title":"func enableTrackEncoding(trackId: String, encoding: TrackEncoding)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/getstats()","title":"func getStats() -> [String : RTCStats]","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/receivemediaevent(mediaevent:)","title":"func receiveMediaEvent(mediaEvent: SerializedMediaEvent)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/removetrack(trackid:)","title":"func removeTrack(trackId: String) -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/setencodingbandwidth(trackid:encoding:bandwidth:)","title":"func setEncodingBandwidth(trackId: String, encoding: String, bandwidth: BandwidthLimit)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/settargettrackencoding(trackid:encoding:)","title":"func setTargetTrackEncoding(trackId: String, encoding: TrackEncoding)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/settrackbandwidth(trackid:bandwidth:)","title":"func setTrackBandwidth(trackId: String, bandwidth: BandwidthLimit)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/updateendpointmetadata(metadata:)","title":"func updateEndpointMetadata(metadata: Metadata)","type":"method"},{"path":"\/documentation\/membranertc\/membranertc\/updatetrackmetadata(trackid:trackmetadata:)","title":"func updateTrackMetadata(trackId: String, trackMetadata: Metadata)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/membranertc\/create(with:delegate:)","title":"static func create(with: CreateOptions, delegate: MembraneRTCDelegate) -> MembraneRTC","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/membranertc\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/membranertc\/membranertc\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/membranertc","title":"MembraneRTC","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/multicastdelegate\/add(delegate:)","title":"func add(delegate: T)","type":"method"},{"path":"\/documentation\/membranertc\/multicastdelegate\/remove(delegate:)","title":"func remove(delegate: T)","type":"method"}],"path":"\/documentation\/membranertc\/multicastdelegate","title":"MulticastDelegate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransport\/init(url:topic:params:channelparams:)","title":"init(url: String, topic: String, params: [String : Any], channelParams: [String : Any])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransport\/connect(delegate:)","title":"func connect(delegate: PhoenixTransportDelegate) -> Promise<Void>","type":"method"},{"path":"\/documentation\/membranertc\/phoenixtransport\/disconnect()","title":"func disconnect()","type":"method"},{"path":"\/documentation\/membranertc\/phoenixtransport\/send(event:)","title":"func send(event: SerializedMediaEvent)","type":"method"}],"path":"\/documentation\/membranertc\/phoenixtransport","title":"PhoenixTransport","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/remoteaudiotrack\/track","title":"let track: RTCAudioTrack","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/remoteaudiotrack\/enabled()","title":"func enabled() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/remoteaudiotrack\/setenabled(_:)","title":"func setEnabled(Bool)","type":"method"},{"path":"\/documentation\/membranertc\/remoteaudiotrack\/setvolume(_:)","title":"func setVolume(Double)","type":"method"},{"path":"\/documentation\/membranertc\/remoteaudiotrack\/trackid()","title":"func trackId() -> String","type":"method"}],"path":"\/documentation\/membranertc\/remoteaudiotrack","title":"RemoteAudioTrack","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/remotevideotrack\/track","title":"let track: RTCVideoTrack","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/remotevideotrack\/enabled()","title":"func enabled() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/remotevideotrack\/setenabled(_:)","title":"func setEnabled(Bool)","type":"method"},{"path":"\/documentation\/membranertc\/remotevideotrack\/trackid()","title":"func trackId() -> String","type":"method"}],"path":"\/documentation\/membranertc\/remotevideotrack","title":"RemoteVideoTrack","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sounddetection\/init()","title":"init() throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sounddetection\/isrecording","title":"var isRecording: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sounddetection\/setonsounddetectedlistener(listener:)","title":"func setOnSoundDetectedListener(listener: SoundDetectedListener?)","type":"method"},{"path":"\/documentation\/membranertc\/sounddetection\/setonvolumechangedlistener(listener:)","title":"func setOnVolumeChangedListener(listener: VolumeChangedListener?)","type":"method"},{"path":"\/documentation\/membranertc\/sounddetection\/start(_:)","title":"func start(Int) throws","type":"method"},{"path":"\/documentation\/membranertc\/sounddetection\/stop()","title":"func stop()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sounddetection\/sounddetectedlistener","title":"SoundDetection.SoundDetectedListener","type":"typealias"},{"path":"\/documentation\/membranertc\/sounddetection\/volumechangedlistener","title":"SoundDetection.VolumeChangedListener","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sounddetection\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/membranertc\/sounddetection\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/sounddetection","title":"SoundDetection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackcontext\/encoding","title":"var encoding: TrackEncoding?","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/encodingreason","title":"var encodingReason: EncodingReason?","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/endpoint","title":"let endpoint: Endpoint","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/metadata","title":"var metadata: Metadata","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/track","title":"var track: RemoteTrack?","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/trackid","title":"let trackId: String","type":"property"},{"path":"\/documentation\/membranertc\/trackcontext\/vadstatus","title":"var vadStatus: VadStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackcontext\/setonencodingchangedlistener(listener:)","title":"func setOnEncodingChangedListener(listener: ((_ trackContext: TrackContext) -> Void)?)","type":"method"},{"path":"\/documentation\/membranertc\/trackcontext\/setonvoiceactivitychangedlistener(listener:)","title":"func setOnVoiceActivityChangedListener(listener: ((_ trackContext: TrackContext) -> Void)?)","type":"method"}],"path":"\/documentation\/membranertc\/trackcontext","title":"TrackContext","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videotrack\/==(_:_:)","title":"static func == (VideoTrack, VideoTrack) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videotrack\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/videotrack\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/videotrack","title":"VideoTrack","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/delegate","title":"var delegate: VideoViewDelegate?","type":"property"},{"path":"\/documentation\/membranertc\/videoview\/dimensions","title":"var dimensions: Dimensions?","type":"property"},{"path":"\/documentation\/membranertc\/videoview\/layout-swift.property","title":"var layout: Layout","type":"property"},{"path":"\/documentation\/membranertc\/videoview\/mirror","title":"var mirror: Bool","type":"property"},{"path":"\/documentation\/membranertc\/videoview\/rendererview","title":"var rendererView: RTCVideoRenderer?","type":"property"},{"path":"\/documentation\/membranertc\/videoview\/track","title":"var track: VideoTrack?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/ismetalavailable()","title":"static func isMetalAvailable() -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/layout-swift.enum\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/membranertc\/videoview\/layout-swift.enum\/fit","title":"case fit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/layout-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/videoview\/layout-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/videoview\/layout-swift.enum","title":"VideoView.Layout","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoview\/videoview(_:didchangevideosize:)","title":"func videoView(RTCVideoRenderer, didChangeVideoSize: CGSize)","type":"method"}],"path":"\/documentation\/membranertc\/videoview\/rtcvideoviewdelegate-implementations","title":"RTCVideoViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/videoview","title":"VideoView","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrackdelegate\/paused()","title":"func paused()","type":"method"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrackdelegate\/resumed()","title":"func resumed()","type":"method"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrackdelegate\/started()","title":"func started()","type":"method"},{"path":"\/documentation\/membranertc\/localscreenbroadcasttrackdelegate\/stopped()","title":"func stopped()","type":"method"}],"path":"\/documentation\/membranertc\/localscreenbroadcasttrackdelegate","title":"LocalScreenBroadcastTrackDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/membranertc\/membranertcdelegate\/onbandwidthestimationchanged(estimation:)-8g6p8","title":"func onBandwidthEstimationChanged(estimation: Int)","type":"method"}],"title":"MembraneRTCDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/membranertc\/membranertcdelegate\/onbandwidthestimationchanged(estimation:)-7tuut","title":"func onBandwidthEstimationChanged(estimation: Int)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onconnected(endpointid:otherendpoints:)","title":"func onConnected(endpointId: String, otherEndpoints: [Endpoint])","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onconnectionerror(metadata:)","title":"func onConnectionError(metadata: Any)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onendpointadded(endpoint:)","title":"func onEndpointAdded(endpoint: Endpoint)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onendpointremoved(endpoint:)","title":"func onEndpointRemoved(endpoint: Endpoint)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onendpointupdated(endpoint:)","title":"func onEndpointUpdated(endpoint: Endpoint)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/onsendmediaevent(event:)","title":"func onSendMediaEvent(event: SerializedMediaEvent)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/ontrackadded(ctx:)","title":"func onTrackAdded(ctx: TrackContext)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/ontrackready(ctx:)","title":"func onTrackReady(ctx: TrackContext)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/ontrackremoved(ctx:)","title":"func onTrackRemoved(ctx: TrackContext)","type":"method"},{"path":"\/documentation\/membranertc\/membranertcdelegate\/ontrackupdated(ctx:)","title":"func onTrackUpdated(ctx: TrackContext)","type":"method"}],"path":"\/documentation\/membranertc\/membranertcdelegate","title":"MembraneRTCDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransportdelegate\/didreceive(error:)","title":"func didReceive(error: PhoenixTransportError)","type":"method"},{"path":"\/documentation\/membranertc\/phoenixtransportdelegate\/didreceive(event:)","title":"func didReceive(event: SerializedMediaEvent)","type":"method"}],"path":"\/documentation\/membranertc\/phoenixtransportdelegate","title":"PhoenixTransportDelegate","type":"protocol"},{"path":"\/documentation\/membranertc\/rtcstats","title":"RTCStats","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableevent\/type","title":"var type: ReceivableEventType","type":"property"}],"path":"\/documentation\/membranertc\/receivableevent","title":"ReceivableEvent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/remotetrack\/enabled()","title":"func enabled() -> Bool","type":"method"},{"path":"\/documentation\/membranertc\/remotetrack\/setenabled(_:)","title":"func setEnabled(Bool)","type":"method"},{"path":"\/documentation\/membranertc\/remotetrack\/trackid()","title":"func trackId() -> String","type":"method"}],"path":"\/documentation\/membranertc\/remotetrack","title":"RemoteTrack","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/sendableevent\/serialize()","title":"func serialize() -> Payload","type":"method"}],"path":"\/documentation\/membranertc\/sendableevent","title":"SendableEvent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoviewdelegate\/didchange(dimensions:)","title":"func didChange(dimensions: Dimensions)","type":"method"}],"path":"\/documentation\/membranertc\/videoviewdelegate","title":"VideoViewDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/anyjson\/init(_:)","title":"init([String : Any])","type":"init"},{"path":"\/documentation\/membranertc\/anyjson\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/anyjson\/keys","title":"var keys: Dictionary<String, Any>.Keys","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/anyjson\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/membranertc\/anyjson\/subscript(_:)","title":"subscript(String) -> Any?","type":"subscript"}],"path":"\/documentation\/membranertc\/anyjson","title":"AnyJson","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/unknownfields","title":"var unknownFields: UnknownStorage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/==(_:_:)","title":"static func == (BroadcastMessage.Audio, BroadcastMessage.Audio) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(contiguousbytes:extensions:partial:options:)","title":"init<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(jsonstring:extensions:options:)","title":"init(jsonString: String, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(jsonstring:options:)","title":"init(jsonString: String, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(jsonutf8data:extensions:options:)","title":"init(jsonUTF8Data: Data, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(jsonutf8data:options:)","title":"init(jsonUTF8Data: Data, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(serializeddata:extensions:partial:options:)","title":"init(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(textformatstring:extensions:)","title":"init(textFormatString: String, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(textformatstring:options:extensions:)","title":"init(textFormatString: String, options: TextFormatDecodingOptions, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/init(unpackingany:extensions:options:)","title":"init(unpackingAny: Google_Protobuf_Any, extensions: ExtensionMap?, options: BinaryDecodingOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/isinitialized","title":"var isInitialized: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/decodemessage(decoder:)","title":"func decodeMessage<D>(decoder: inout D) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/jsonstring(options:)","title":"func jsonString(options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/jsonutf8data(options:)","title":"func jsonUTF8Data(options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/merge(contiguousbytes:extensions:partial:options:)","title":"func merge<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/merge(serializeddata:extensions:partial:options:)","title":"func merge(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/serializeddata(partial:)","title":"func serializedData(partial: Bool) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/textformatstring()","title":"func textFormatString() -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/textformatstring(options:)","title":"func textFormatString(options: TextFormatEncodingOptions) -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/traverse(visitor:)","title":"func traverse<V>(visitor: inout V) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/protomessagename","title":"static let protoMessageName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/array(fromjsonstring:extensions:options:)","title":"static func array(fromJSONString: String, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/array(fromjsonstring:options:)","title":"static func array(fromJSONString: String, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/array(fromjsonutf8data:extensions:options:)","title":"static func array(fromJSONUTF8Data: Data, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/array(fromjsonutf8data:options:)","title":"static func array(fromJSONUTF8Data: Data, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/jsonstring(from:options:)","title":"static func jsonString<C>(from: C, options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/jsonutf8data(from:options:)","title":"static func jsonUTF8Data<C>(from: C, options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/with(_:)","title":"static func with((inout Self) throws -> ()) rethrows -> Self","type":"method"}],"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct\/message-implementations","title":"Message Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.struct","title":"BroadcastMessage.Audio","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/format","title":"var format: UInt32","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/height","title":"var height: UInt32","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/rotation","title":"var rotation: UInt32","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/unknownfields","title":"var unknownFields: UnknownStorage","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/width","title":"var width: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/==(_:_:)","title":"static func == (BroadcastMessage.Video, BroadcastMessage.Video) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(contiguousbytes:extensions:partial:options:)","title":"init<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(jsonstring:extensions:options:)","title":"init(jsonString: String, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(jsonstring:options:)","title":"init(jsonString: String, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(jsonutf8data:extensions:options:)","title":"init(jsonUTF8Data: Data, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(jsonutf8data:options:)","title":"init(jsonUTF8Data: Data, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(serializeddata:extensions:partial:options:)","title":"init(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(textformatstring:extensions:)","title":"init(textFormatString: String, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(textformatstring:options:extensions:)","title":"init(textFormatString: String, options: TextFormatDecodingOptions, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/init(unpackingany:extensions:options:)","title":"init(unpackingAny: Google_Protobuf_Any, extensions: ExtensionMap?, options: BinaryDecodingOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/isinitialized","title":"var isInitialized: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/decodemessage(decoder:)","title":"func decodeMessage<D>(decoder: inout D) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/jsonstring(options:)","title":"func jsonString(options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/jsonutf8data(options:)","title":"func jsonUTF8Data(options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/merge(contiguousbytes:extensions:partial:options:)","title":"func merge<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/merge(serializeddata:extensions:partial:options:)","title":"func merge(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/serializeddata(partial:)","title":"func serializedData(partial: Bool) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/textformatstring()","title":"func textFormatString() -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/textformatstring(options:)","title":"func textFormatString(options: TextFormatEncodingOptions) -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/traverse(visitor:)","title":"func traverse<V>(visitor: inout V) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/protomessagename","title":"static let protoMessageName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/array(fromjsonstring:extensions:options:)","title":"static func array(fromJSONString: String, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/array(fromjsonstring:options:)","title":"static func array(fromJSONString: String, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/array(fromjsonutf8data:extensions:options:)","title":"static func array(fromJSONUTF8Data: Data, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/array(fromjsonutf8data:options:)","title":"static func array(fromJSONUTF8Data: Data, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/jsonstring(from:options:)","title":"static func jsonString<C>(from: C, options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/jsonutf8data(from:options:)","title":"static func jsonUTF8Data<C>(from: C, options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/with(_:)","title":"static func with((inout Self) throws -> ()) rethrows -> Self","type":"method"}],"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct\/message-implementations","title":"Message Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.struct","title":"BroadcastMessage.Video","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/audio-swift.property","title":"var audio: BroadcastMessage.Audio","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/buffer","title":"var buffer: Data","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.property","title":"var notification: BroadcastMessage.Notification","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/timestamp","title":"var timestamp: Int64","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/type","title":"var type: BroadcastMessage.OneOf_Type?","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/unknownfields","title":"var unknownFields: UnknownStorage","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/video-swift.property","title":"var video: BroadcastMessage.Video","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/unrecognized(_:)","title":"case UNRECOGNIZED(Int)","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/resumed","title":"case resumed","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/started","title":"case started","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/init()","title":"init()","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/rawvalue-swift.property","title":"var rawValue: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/rawvalue-swift.typealias","title":"BroadcastMessage.Notification.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/allcases","title":"static var allCases: [BroadcastMessage.Notification]","type":"property"}],"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"}],"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/broadcastmessage\/notification-swift.enum","title":"BroadcastMessage.Notification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type\/audio(_:)","title":"case audio(BroadcastMessage.Audio)","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type\/notification(_:)","title":"case notification(BroadcastMessage.Notification)","type":"case"},{"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type\/video(_:)","title":"case video(BroadcastMessage.Video)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/broadcastmessage\/oneof_type","title":"BroadcastMessage.OneOf_Type","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/membranertc\/broadcastmessage\/==(_:_:)","title":"static func == (BroadcastMessage, BroadcastMessage) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/broadcastmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(contiguousbytes:extensions:partial:options:)","title":"init<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(jsonstring:extensions:options:)","title":"init(jsonString: String, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(jsonstring:options:)","title":"init(jsonString: String, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(jsonutf8data:extensions:options:)","title":"init(jsonUTF8Data: Data, extensions: ExtensionMap?, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(jsonutf8data:options:)","title":"init(jsonUTF8Data: Data, options: JSONDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(serializeddata:extensions:partial:options:)","title":"init(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(textformatstring:extensions:)","title":"init(textFormatString: String, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(textformatstring:options:extensions:)","title":"init(textFormatString: String, options: TextFormatDecodingOptions, extensions: ExtensionMap?) throws","type":"init"},{"path":"\/documentation\/membranertc\/broadcastmessage\/init(unpackingany:extensions:options:)","title":"init(unpackingAny: Google_Protobuf_Any, extensions: ExtensionMap?, options: BinaryDecodingOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/membranertc\/broadcastmessage\/isinitialized","title":"var isInitialized: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/decodemessage(decoder:)","title":"func decodeMessage<D>(decoder: inout D) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/jsonstring(options:)","title":"func jsonString(options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/jsonutf8data(options:)","title":"func jsonUTF8Data(options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/merge(contiguousbytes:extensions:partial:options:)","title":"func merge<Bytes>(contiguousBytes: Bytes, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/merge(serializeddata:extensions:partial:options:)","title":"func merge(serializedData: Data, extensions: ExtensionMap?, partial: Bool, options: BinaryDecodingOptions) throws","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/serializeddata(partial:)","title":"func serializedData(partial: Bool) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/textformatstring()","title":"func textFormatString() -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/textformatstring(options:)","title":"func textFormatString(options: TextFormatEncodingOptions) -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/traverse(visitor:)","title":"func traverse<V>(visitor: inout V) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/protomessagename","title":"static let protoMessageName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/broadcastmessage\/array(fromjsonstring:extensions:options:)","title":"static func array(fromJSONString: String, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/array(fromjsonstring:options:)","title":"static func array(fromJSONString: String, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/array(fromjsonutf8data:extensions:options:)","title":"static func array(fromJSONUTF8Data: Data, extensions: ExtensionMap, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/array(fromjsonutf8data:options:)","title":"static func array(fromJSONUTF8Data: Data, options: JSONDecodingOptions) throws -> [Self]","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/jsonstring(from:options:)","title":"static func jsonString<C>(from: C, options: JSONEncodingOptions) throws -> String","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/jsonutf8data(from:options:)","title":"static func jsonUTF8Data<C>(from: C, options: JSONEncodingOptions) throws -> Data","type":"method"},{"path":"\/documentation\/membranertc\/broadcastmessage\/with(_:)","title":"static func with((inout Self) throws -> ()) rethrows -> Self","type":"method"}],"path":"\/documentation\/membranertc\/broadcastmessage\/message-implementations","title":"Message Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/broadcastmessage","title":"BroadcastMessage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/endpoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/membranertc\/endpoint\/init(id:type:metadata:trackidtometadata:)","title":"init(id: String, type: String, metadata: Metadata?, trackIdToMetadata: [String : Metadata]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/endpoint\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/membranertc\/endpoint\/metadata","title":"let metadata: Metadata","type":"property"},{"path":"\/documentation\/membranertc\/endpoint\/trackidtometadata","title":"let trackIdToMetadata: [String : Metadata]?","type":"property"},{"path":"\/documentation\/membranertc\/endpoint\/type","title":"let type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/endpoint\/with(id:type:metadata:trackidtometadata:)","title":"func with(id: String?, type: String?, metadata: Metadata?, trackIdToMetadata: [String : Metadata]?) -> Endpoint","type":"method"},{"path":"\/documentation\/membranertc\/endpoint\/withtrack(trackid:metadata:)","title":"func withTrack(trackId: String, metadata: Metadata?) -> Endpoint","type":"method"},{"path":"\/documentation\/membranertc\/endpoint\/withouttrack(trackid:)","title":"func withoutTrack(trackId: String) -> Endpoint","type":"method"}],"path":"\/documentation\/membranertc\/endpoint","title":"Endpoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/qualitylimitationdurations\/init(bandwidth:cpu:none:other:)","title":"init(bandwidth: Double, cpu: Double, none: Double, other: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/qualitylimitationdurations\/bandwidth","title":"let bandwidth: Double","type":"property"},{"path":"\/documentation\/membranertc\/qualitylimitationdurations\/cpu","title":"let cpu: Double","type":"property"},{"path":"\/documentation\/membranertc\/qualitylimitationdurations\/none","title":"let none: Double","type":"property"},{"path":"\/documentation\/membranertc\/qualitylimitationdurations\/other","title":"let other: Double","type":"property"}],"path":"\/documentation\/membranertc\/qualitylimitationdurations","title":"QualityLimitationDurations","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/init(kind:jitter:packetslost:packetsreceived:bytesreceived:framesreceived:framewidth:frameheight:framespersecond:framesdropped:)","title":"init(kind: String, jitter: Double, packetsLost: UInt, packetsReceived: UInt, bytesReceived: UInt, framesReceived: UInt, frameWidth: UInt, frameHeight: UInt, framesPerSecond: Double, framesDropped: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/bytesreceived","title":"let bytesReceived: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/frameheight","title":"let frameHeight: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/framewidth","title":"let frameWidth: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/framesdropped","title":"let framesDropped: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/framespersecond","title":"let framesPerSecond: Double","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/framesreceived","title":"let framesReceived: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/jitter","title":"let jitter: Double","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/kind","title":"let kind: String","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/packetslost","title":"let packetsLost: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcinboundstats\/packetsreceived","title":"let packetsReceived: UInt","type":"property"}],"path":"\/documentation\/membranertc\/rtcinboundstats","title":"RTCInboundStats","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/init(kind:rid:bytessent:targetbitrate:packetssent:framesencoded:framespersecond:framewidth:frameheight:qualitylimitationdurations:)","title":"init(kind: String, rid: String, bytesSent: UInt, targetBitrate: Double, packetsSent: UInt, framesEncoded: UInt, framesPerSecond: Double, frameWidth: UInt, frameHeight: UInt, qualityLimitationDurations: QualityLimitationDurations?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/bytessent","title":"let bytesSent: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/frameheight","title":"let frameHeight: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/framewidth","title":"let frameWidth: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/framesencoded","title":"let framesEncoded: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/framespersecond","title":"let framesPerSecond: Double","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/kind","title":"let kind: String","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/packetssent","title":"let packetsSent: UInt","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/qualitylimitationdurations","title":"let qualityLimitationDurations: QualityLimitationDurations?","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/rid","title":"let rid: String","type":"property"},{"path":"\/documentation\/membranertc\/rtcoutboundstats\/targetbitrate","title":"let targetBitrate: Double","type":"property"}],"path":"\/documentation\/membranertc\/rtcoutboundstats","title":"RTCOutboundStats","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/simulcastconfig\/init(enabled:activeencodings:)","title":"init(enabled: Bool, activeEncodings: [TrackEncoding])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/simulcastconfig\/activeencodings","title":"var activeEncodings: [TrackEncoding]","type":"property"},{"path":"\/documentation\/membranertc\/simulcastconfig\/enabled","title":"var enabled: Bool","type":"property"}],"path":"\/documentation\/membranertc\/simulcastconfig","title":"SimulcastConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/init(_:layout:mirror:dimensions:)","title":"init(VideoTrack, layout: VideoView.Layout, mirror: Bool, dimensions: Binding<Dimensions?>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/makeuiview(context:)","title":"func makeUIView(context: Context) -> VideoView","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/updateuiview(_:context:)","title":"func updateUIView(VideoView, context: Context)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/dismantleuiview(_:coordinator:)-8jmcj","title":"static func dismantleUIView(VideoView, coordinator: ())","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/makecoordinator()","title":"func makeCoordinator() -> Self.Coordinator","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/sizethatfits(_:uiview:context:)","title":"func sizeThatFits(ProposedViewSize, uiView: Self.UIViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/dismantleuiview(_:coordinator:)-8puoh","title":"static func dismantleUIView(Self.UIViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/membranertc\/swiftuivideoview\/uiviewrepresentable-implementations","title":"UIViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(activationpoint:)-29w33","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(activationpoint:)-7gc78","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityactivationpoint(_:)-55q7z","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityactivationpoint(_:)-97xh6","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-1jn65","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-2x2j9","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-3fl2h","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-4cg9u","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-6eqxh","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-6min","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-85e9b","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitycustomcontent(_:_:importance:)-9q2zc","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityhint(_:)-4x9pn","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityhint(_:)-6e8yz","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityhint(_:)-7g6tq","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityinputlabels(_:)-1wiaq","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityinputlabels(_:)-2hjfm","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityinputlabels(_:)-8nc38","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitylabel(_:)-1myv9","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitylabel(_:)-453h1","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitylabel(_:)-htgu","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:)-2l6nl","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:)-4h0d8","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:)-67sdo","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:)-ov0r","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3u3p0","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entryid:entrylabel:)-47lu3","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7q76c","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7x50y","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entrylabel:)-3nbsl","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entrylabel:)-5k1dj","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entrylabel:)-7kcog","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:entries:entrylabel:)-9aym0","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:textranges:)-43mb0","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:textranges:)-6h9c0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:textranges:)-72j8w","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotor(_:textranges:)-8kwy6","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityvalue(_:)-3mu2h","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityvalue(_:)-5gdsb","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/accessibilityvalue(_:)-6c42s","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:)-13pyf","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:)-61wth","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:)-9p0ga","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:message:)-4f30m","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:message:)-5gnai","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:actions:message:)-6v9qd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:)-1ljbk","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:)-3at5t","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:)-9els0","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:message:)-3xkkv","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:message:)-69sdz","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(_:ispresented:presenting:actions:message:)-6zhtn","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alignmentguide(_:computevalue:)-3s46i","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/alignmentguide(_:computevalue:)-9pgiy","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/aspectratio(_:contentmode:)-56hz9","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/aspectratio(_:contentmode:)-7i0do","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(_:in:fillstyle:)-3r5yw","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(_:in:fillstyle:)-58dde","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(in:fillstyle:)-3ko1n","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/background(in:fillstyle:)-6fmrf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/badge(_:)-2318n","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/badge(_:)-2cqbo","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/badge(_:)-8nvoz","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/badge(_:)-mqhz","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/buttonstyle(_:)-171cd","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/buttonstyle(_:)-2zdb1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2o4jt","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5uszz","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7d3mm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-790fk","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7j7mi","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9c53j","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2bbsw","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8gtu5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-94f6t","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3mhkf","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4akv9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7alvb","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/dynamictypesize(_:)-15avp","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/dynamictypesize(_:)-71jg9","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4b5k1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-kufr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8skxg","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8whzy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedobject(_:)-2rxwo","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedobject(_:)-95ocx","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedsceneobject(_:)-4813e","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedsceneobject(_:)-6965t","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedscenevalue(_:_:)-93ozd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedscenevalue(_:_:)-9t1if","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedvalue(_:_:)-54j0q","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/focusedvalue(_:_:)-x8yl","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/help(_:)-1zyy8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/help(_:)-5aib0","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/help(_:)-68mne","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/keyboardshortcut(_:)-36tm8","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/keyboardshortcut(_:)-39qqm","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listitemtint(_:)-6a0cq","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listitemtint(_:)-mfj4","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:)-146t7","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:)-1a8sz","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:)-5o9hr","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:displaymode:)-3wxie","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:displaymode:)-4eysk","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitle(_:displaymode:)-4tdl","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:)-1h1le","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:)-7k7x3","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:preview:)-1tgiu","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:preview:)-6cykw","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:preview:)-96qt0","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationdocument(_:preview:)-klnj","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationtitle(_:)-5h0em","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationtitle(_:)-8fxc","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationtitle(_:)-8iyek","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationtitle(_:)-94rrh","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationtitle(_:)-fjd1","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:delegate:)-8xvgp","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:delegate:)-etaa","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:istargeted:perform:)-3ppfd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:istargeted:perform:)-3sr1u","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:istargeted:perform:)-7vg60","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/ondrop(of:istargeted:perform:)-aa94","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/padding(_:)-2myp2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/padding(_:)-4hdnp","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/renameaction(_:)-9gu2m","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/renameaction(_:)-x4xd","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/safeareainset(edge:alignment:spacing:content:)-3yx1p","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/safeareainset(edge:alignment:spacing:content:)-a89e","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scaleeffect(_:anchor:)-3dltj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scaleeffect(_:anchor:)-qrbg","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchcompletion(_:)-2dsjr","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchcompletion(_:)-2xvh7","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:)-1k7yn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:)-9w22m","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:)-9y7c4","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:suggestions:)-5eta9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:suggestions:)-5xulz","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:placement:prompt:suggestions:)-6htjv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:placement:prompt:token:)-1uhcd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:placement:prompt:token:)-324tu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:placement:prompt:token:)-6eyne","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2fpue","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3t7cg","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9x8j6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/membranertc\/swiftuivideoview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tint(_:)-4xctn","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tint(_:)-7zsz8","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbar(content:)-2m7eo","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbar(content:)-5fgdu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbarbackground(_:for:)-3j9zg","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbarbackground(_:for:)-5hvex","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/membranertc\/swiftuivideoview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/membranertc\/swiftuivideoview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/swiftuivideoview","title":"SwiftUIVideoView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoparameters\/init(dimensions:maxbandwidth:maxfps:simulcastconfig:)","title":"init(dimensions: Dimensions, maxBandwidth: TrackBandwidthLimit, maxFps: Int, simulcastConfig: SimulcastConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoparameters\/dimensions","title":"let dimensions: Dimensions","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/maxbandwidth","title":"let maxBandwidth: TrackBandwidthLimit","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/maxfps","title":"let maxFps: Int","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/simulcastconfig","title":"let simulcastConfig: SimulcastConfig","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/videoparameters\/presetfhd169","title":"static let presetFHD169: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetfhd43","title":"static let presetFHD43: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presethd169","title":"static let presetHD169: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presethd43","title":"static let presetHD43: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetqhd169","title":"static let presetQHD169: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetqhd43","title":"static let presetQHD43: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetqvga169","title":"static let presetQVGA169: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetqvga43","title":"static let presetQVGA43: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetscreensharefhd15","title":"static let presetScreenShareFHD15: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetscreensharefhd30","title":"static let presetScreenShareFHD30: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetscreensharehd15","title":"static let presetScreenShareHD15: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetscreensharehd5","title":"static let presetScreenShareHD5: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetscreensharevga","title":"static let presetScreenShareVGA: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetvga169","title":"static let presetVGA169: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetvga43","title":"static let presetVGA43: VideoParameters","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presets169","title":"static let presets169: [VideoParameters]","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presets43","title":"static let presets43: [VideoParameters]","type":"property"},{"path":"\/documentation\/membranertc\/videoparameters\/presetsscreenshare","title":"static let presetsScreenShare: [VideoParameters]","type":"property"}],"path":"\/documentation\/membranertc\/videoparameters","title":"VideoParameters","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/bandwidthlimit","title":"BandwidthLimit","type":"typealias"},{"path":"\/documentation\/membranertc\/dimensions","title":"Dimensions","type":"typealias"},{"path":"\/documentation\/membranertc\/ipconreceivedata","title":"IPCOnReceiveData","type":"typealias"},{"path":"\/documentation\/membranertc\/metadata","title":"Metadata","type":"typealias"},{"path":"\/documentation\/membranertc\/payload","title":"Payload","type":"typealias"},{"path":"\/documentation\/membranertc\/serializedmediaevent","title":"SerializedMediaEvent","type":"typealias"},{"path":"\/documentation\/membranertc\/simulcastbandwidthlimit","title":"SimulcastBandwidthLimit","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encoder\/default","title":"case DEFAULT","type":"case"},{"path":"\/documentation\/membranertc\/encoder\/h264","title":"case H264","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encoder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/encoder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/encoder","title":"Encoder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encodingreason\/encoding_inactive","title":"case encoding_inactive","type":"case"},{"path":"\/documentation\/membranertc\/encodingreason\/low_bandwidth","title":"case low_bandwidth","type":"case"},{"path":"\/documentation\/membranertc\/encodingreason\/other","title":"case other","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encodingreason\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encodingreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/encodingreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encodingreason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/encodingreason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/membranertc\/encodingreason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/encodingreason","title":"EncodingReason","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/events\/deserialize(payload:)","title":"static func deserialize(payload: String) -> ReceivableEvent?","type":"method"}],"path":"\/documentation\/membranertc\/events","title":"Events","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransporterror\/connectionerror","title":"case connectionError","type":"case"},{"path":"\/documentation\/membranertc\/phoenixtransporterror\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/membranertc\/phoenixtransporterror\/unexpected(reason:)","title":"case unexpected(reason: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransporterror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/membranertc\/phoenixtransporterror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/phoenixtransporterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/membranertc\/phoenixtransporterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/phoenixtransporterror","title":"PhoenixTransportError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/bandwidthestimation","title":"case BandwidthEstimation","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/candidate","title":"case Candidate","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/connected","title":"case Connected","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/custom","title":"case Custom","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/encodingswitched","title":"case EncodingSwitched","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/endpointadded","title":"case EndpointAdded","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/endpointremoved","title":"case EndpointRemoved","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/endpointupdated","title":"case EndpointUpdated","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/offerdata","title":"case OfferData","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/sdpanswer","title":"case SdpAnswer","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/trackupdated","title":"case TrackUpdated","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/tracksadded","title":"case TracksAdded","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/tracksremoved","title":"case TracksRemoved","type":"case"},{"path":"\/documentation\/membranertc\/receivableeventtype\/vadnotification","title":"case VadNotification","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/receivableeventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/receivableeventtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/membranertc\/receivableeventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/membranertc\/receivableeventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/receivableeventtype","title":"ReceivableEventType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackbandwidthlimit\/bandwidthlimit(_:)","title":"case BandwidthLimit(BandwidthLimit)","type":"case"},{"path":"\/documentation\/membranertc\/trackbandwidthlimit\/simulcastbandwidthlimit(_:)","title":"case SimulcastBandwidthLimit(SimulcastBandwidthLimit)","type":"case"}],"path":"\/documentation\/membranertc\/trackbandwidthlimit","title":"TrackBandwidthLimit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/h","title":"case h","type":"case"},{"path":"\/documentation\/membranertc\/trackencoding\/l","title":"case l","type":"case"},{"path":"\/documentation\/membranertc\/trackencoding\/m","title":"case m","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/trackencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/trackencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/membranertc\/trackencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/trackencoding","title":"TrackEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/membranertc\/vadstatus\/silence","title":"case silence","type":"case"},{"path":"\/documentation\/membranertc\/vadstatus\/speech","title":"case speech","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/membranertc\/vadstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/membranertc\/vadstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/membranertc\/vadstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/membranertc\/vadstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/membranertc\/vadstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/membranertc\/vadstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/membranertc\/vadstatus","title":"VadStatus","type":"enum"}],"path":"\/documentation\/membranertc","title":"MembraneRTC","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}